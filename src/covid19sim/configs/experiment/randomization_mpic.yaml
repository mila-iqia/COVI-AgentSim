# `sample` can be
# - `uniform` (from np.random.uniform(*from))
# - `range` (np.choice(np.arange(*from)))
# - `list` (np.choice(from))
# - `cartesian` special case where a cartesian product of all keys with the `cartesian` sampling scheme
#               is created and iterated over in order. `from` MUST be a list
#               As we iterate over the cartesian product of all
#               such keys, others are sampled as usual. If n_search is larger than the size of the cartesian
#               product, it will cycle again through the product in the same order
#               example with A being `cartesian` from [1, 2] and B from [y, z] and 5 searches:
#                  => {A:1, B: y}, {A:1, B: z}, {A:2, B: y}, {A:2, B: z}, {A:1, B: y}
# - `sequential` samples will loop through the values in `from`. `from` MUST be a list

intervention: oracle
run_type: collect-training-data
track: none

# Candidate for OOD testing
n_people: 3000
simulation_days: 50

INTERVENTION_DAY: 0
MAKE_HOUSEHOLD_BEHAVE_SAME_AS_MAX_RISK_RESIDENT: True

outdir: /home/nrahaman/python/covi-simulator/exp/neodr2
weights_dir: /home/nrahaman/python/ctt/exp/SHIPMENTS
zip_outdir: true
delete_outdir: true
use_tmpdir: false
n_search: 1100
n_runs_per_search: 1
USE_INFERENCE_SERVER: false
env_name: covid38
infra: beluga
time: '"02:50:00"'
cpus: 4
mem: 8

# Oracle business
risk_mappings: uniform

ORACLE_MUL_NOISE:
  sample: uniform
  from: [0.2, 0.8]

ORACLE_ADD_NOISE:
  sample: uniform
  from: [0.05, 0.15]

# Other rando params
GLOBAL_MOBILITY_SCALING_FACTOR:
  sample: uniform
  from: [0.2, 0.75] # experiments are run for 0.25-0.70

BASELINE_P_ASYMPTOMATIC:
  sample: uniform
  from: [0.50, 1.0] # range for sensitivity

P_DROPOUT_SYMPTOM:
  sample: uniform
  from: [0.2, 0.8] # (range for sensitivity) to discuss

ALL_LEVELS_DROPOUT:
  sample: uniform
  from: [0.01, 0.32] # range for sensitivity is 0.02 to 0.64, but 0.64 seems too much ; to discuss

PROPORTION_LAB_TEST_PER_DAY:
  sample: uniform
  from: [0.0005, 0.005]

ASYMPTOMATIC_INFECTION_RATIO:
  sample: uniform
  from: [0.27, 0.47] # range for sensitivity is 0.29-0.45

APP_UPTAKE:
  sample: uniform # uniform in range:
  from: [0.25, 0.85]

P_CAREFUL_PERSON:
  sample: uniform # uniform in range:
  from: [0.5, 0.8]

init_fraction_sick:
  sample: uniform
  from: [0.002, 0.006]

P_DROPIN_SYMPTOM:
  sample: uniform
  from: [0.0001, 0.001]

QUARANTINE_DROPOUT_TEST:
  sample: uniform
  from: [0.01, 0.03]

QUARANTINE_DROPOUT_HOUSEHOLD:
  sample: uniform
  from: [0.02, 0.05]

seed: # for sole reproducibility purposes
  sample: range # uniform int choice
  from: [3000, 3100]



# python random_search.py infra=mila partition=covid gres="gpu:1" env_name=covid382 time='"02:50:00"'

# python random_search.py infra=beluga outdir=/scratch/vsch/covid_sims/random_search/2020-06-10 weights_dir=/scratch/vsch env_name=covid38 time='"02:50:00"' n_people=10 n_search=1 n_runs_per_search=1